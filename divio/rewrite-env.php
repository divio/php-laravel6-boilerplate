<?php

/**
 * Set the basic environment settings like encryption key and
 * debug mode
 */
if(getenv('SECRET_KEY')) {
    // Set static secret if present, otherwise use autogenerated random value from .env
    $env['APP_KEY'] = 'base64:'. base64_encode(substr(getenv('SECRET_KEY'), 0, 32));
}
$env['APP_DEBUG'] = $_SERVER['DEBUG'] ?? true;
$env['APP_URL'] = $_SERVER['DOMAIN'] ?? 'http://localhost';
$env['APP_ENV'] = $_SERVER['STAGE'] ?? 'local';
$env['APP_NAME'] = $_SERVER['SITE_NAME'] ?? 'Laravel Boilerplate';

/**
 * force setting the cache and session drivers to use database
 */
$env['CACHE_DRIVER'] = 'database';
$env['SESSION_DRIVER'] = 'database';

/**
 * set default logging output to stderr
 */
$env['LOG_CHANNEL'] = 'stderr';

/**
 * get the database credentials from the DSN variable and
 * translate them into different environment variables
 */
$db = parse_url($_SERVER['DEFAULT_DATABASE_DSN'] ?? 'postgres://postgres@db:5432/db');

$env['DB_CONNECTION'] = 'pgsql';
$env['DB_USERNAME'] = $db['user'];
$env['DB_PASSWORD'] = $db['pass'] ?? '';
$env['DB_HOST'] = $db['host'];
$env['DB_PORT'] = $db['port'] ?? '5432';
$env['DB_DATABASE'] = substr($db['path'], 1);

/**
 * get the storage dsn and translate it into different
 * environment variables
 */

if(isset($_SERVER['DEFAULT_STORAGE_DSN'])) {

    $s3 = parse_url($_SERVER['DEFAULT_STORAGE_DSN']);
    parse_str($s3['query'], $query);

    $env['FILESYSTEM_DRIVER'] = 's3';
    $env['AWS_ACCESS_KEY_ID'] = $s3['user'];
    $env['AWS_SECRET_ACCESS_KEY'] = urldecode($s3['pass']);
    $env['AWS_BUCKET'] = $query['domain'];

}


/**
 * Set environment variables in $_ENV and the environment
 */
foreach($env as $key => $value) {
    $_ENV[$key] = $value;
    putenv($key .'='. $value);
}
